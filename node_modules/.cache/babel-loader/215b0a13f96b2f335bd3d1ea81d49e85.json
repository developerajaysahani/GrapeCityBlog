{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\newdata\\\\src\\\\components\\\\Map\\\\Map.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport './Map.css';\nconst mapStyles = {\n  width: '100%',\n  height: '90%'\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: [],\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false\n    };\n\n    this.onMarkerClick = (props, marker) => this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n  }\n\n  componentDidMount() {\n    fetch('https://boiling-shelf.herokuapp.com/api/posts').then(resp => {\n      resp.json().then(result => {\n        console.log(result);\n        this.setState({\n          location: result\n        });\n      });\n    });\n  }\n\n  render() {\n    if (!this.props.loaded) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 36\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 26.8467,\n        lng: 80.9462\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.state.location.map((item, i) => /*#__PURE__*/React.createElement(Marker, {\n      name: item.name,\n      address: item.address,\n      title: item.title,\n      key: i,\n      position: {\n        lat: item.gmac_lattitude,\n        lng: item.gmac_longitude\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      onClose: this.onInfoWindowClose,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.name), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.address), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.title))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAhMfDuO4hdhFjkh8qXRBs05Wv2bNL6x6M&callback=myMap\",\n  version: \"3.38\"\n})(MapContainer);","map":{"version":3,"sources":["D:/reactjs/newdata/src/components/Map/Map.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapStyles","width","height","MapContainer","state","location","activeMarker","selectedPlace","showingInfoWindow","onMarkerClick","props","marker","setState","componentDidMount","fetch","then","resp","json","result","console","log","render","loaded","google","lat","lng","map","item","i","name","address","title","gmac_lattitude","gmac_longitude","onInfoWindowClose","apiKey","version"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport './Map.css'\nconst mapStyles = {\n  width: '100%',\n  height: '90%',\n};\nexport class MapContainer extends Component {\n  state = {\n    location: [],\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false\n  };\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n  componentDidMount() {\n    fetch('https://boiling-shelf.herokuapp.com/api/posts').then((resp) => {\n      resp.json().then((result) => {\n        console.log(result)\n        this.setState({ location: result })\n      })\n    })\n  }\n\n  render() {\n    if (!this.props.loaded) return <div>Loading...</div>;\n\n    return (\n      <Map\n        google={this.props.google}\n        zoom={8}\n        style={mapStyles}\n        initialCenter={{ lat: 26.8467, lng: 80.9462 }}\n      >\n        {\n          this.state.location.map((item, i) =>\n            <Marker\n              name={item.name}\n              address={item.address}\n              title={item.title}\n              key={i}\n              position={{ lat: item.gmac_lattitude, lng:item.gmac_longitude }}\n              onClick={this.onMarkerClick}\n            >\n            </Marker>\n          )\n        }\n        <InfoWindow\n          marker={this.state.activeMarker}\n          onClose={this.onInfoWindowClose}\n          visible={this.state.showingInfoWindow}\n        >\n          <div>\n            <h6>{this.state.selectedPlace.name}</h6>\n            <h6>{this.state.selectedPlace.address}</h6>\n            <h6>{this.state.selectedPlace.title}</h6>\n\n          </div>\n        </InfoWindow>\n\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAhMfDuO4hdhFjkh8qXRBs05Wv2bNL6x6M&callback=myMap\",\n  version: \"3.38\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}