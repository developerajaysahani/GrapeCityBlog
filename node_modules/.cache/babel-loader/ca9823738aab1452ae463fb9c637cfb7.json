{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\newdata\\\\src\\\\components\\\\Pagination\\\\post.js\";\nimport React, { useState, useEffect } from 'react';\nimport Detail from './detail';\nimport Pagination from './pagination';\nimport axios from 'axios';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentpage] = useState(1);\n  const [postsPerPage] = useState(4);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('https://boiling-shelf.herokuapp.com/api/posts');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n  const indexOfLastpost = currentPage * postsPerPage;\n  const indexOfFirstpost = indexOfLastpost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstpost, indexOfLastpost);\n\n  const paginate = pageNumber => setCurrentpage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Detail, {\n    posts: currentPosts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["D:/reactjs/newdata/src/components/Pagination/post.js"],"names":["React","useState","useEffect","Detail","Pagination","axios","Posts","posts","setPosts","loading","setLoading","currentPage","setCurrentpage","postsPerPage","fetchPosts","res","get","data","indexOfLastpost","indexOfFirstpost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACI,MAAMC,KAAK,GAAG,MAAK;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAuBT,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,YAAD,IAAiBZ,QAAQ,CAAC,CAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMY,UAAU,GAAG,YAAW;AAC9BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,+CAAV,CAAlB;AACAR,MAAAA,QAAQ,CAACO,GAAG,CAACE,IAAL,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KALA;;AAMDI,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;AAWA,QAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,QAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,QAAMO,YAAY,GAAMb,KAAK,CAACc,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAAxB;;AAGA,QAAMI,QAAQ,GAAIC,UAAD,IAAcX,cAAc,CAACW,UAAD,CAA7C;;AAEA,sBACW;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,YAAf;AAA6B,IAAA,OAAO,EAAEX,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAEI,YAA1B;AAAwC,IAAA,UAAU,EAAEN,KAAK,CAACiB,MAA1D;AAAkE,IAAA,QAAQ,EAAEF,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADX;AAMA,CA9BG;;AAgCJ,eAAehB,KAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport Detail from './detail';\nimport Pagination from './pagination';\nimport axios from 'axios';\n    const Posts = ()=> {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading]= useState(false);\n\tconst [currentPage, setCurrentpage] = useState(1);\n\tconst [postsPerPage] = useState(4);\n\n\tuseEffect(()=>{\n    const fetchPosts = async () =>{\n   \tsetLoading(true);\n   \tconst res = await axios.get('https://boiling-shelf.herokuapp.com/api/posts');\n    setPosts(res.data);\n    setLoading(false); \n   }\n   fetchPosts();\n\t}, []);\n\n\t\n\tconst indexOfLastpost = currentPage * postsPerPage;\n\tconst indexOfFirstpost = indexOfLastpost - postsPerPage;\n\tconst currentPosts    = posts.slice(indexOfFirstpost, indexOfLastpost);\n\n\t\n\tconst paginate = (pageNumber)=>setCurrentpage(pageNumber);\n\n\treturn(\n            <div className=\"container\">\n             <Detail posts={currentPosts} loading={loading}/>\n             <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n            </div>\n\t\t);\n};\n\nexport default Posts; "]},"metadata":{},"sourceType":"module"}